<div class="modal fade" id="vehicleExitModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kendaraan Keluar</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="vehicleExitForm">
                    <div class="mb-3">
                        <label class="form-label">Nomor Kendaraan</label>
                        <div class="input-group">
                            <input type="text" class="form-control" name="vehicleNumber" required 
                                   placeholder="Contoh: B 1234 ABC" pattern="[A-Z]{1,2}\s\d{1,4}\s[A-Z]{1,3}">
                            <button class="btn btn-outline-secondary" type="button" onclick="searchVehicle()">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div id="vehicleDetails" style="display: none;">
                        <div class="alert alert-info">
                            <div class="row">
                                <div class="col-md-6">
                                    <p class="mb-1"><strong>Jenis Kendaraan:</strong> <span id="vehicleType"></span></p>
                                    <p class="mb-1"><strong>Waktu Masuk:</strong> <span id="entryTime"></span></p>
                                </div>
                                <div class="col-md-6">
                                    <p class="mb-1"><strong>Durasi:</strong> <span id="duration"></span></p>
                                    <p class="mb-1"><strong>Total Biaya:</strong> <span id="totalCost"></span></p>
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Metode Pembayaran</label>
                            <select class="form-select" name="paymentMethod" required>
                                <option value="Cash">Tunai</option>
                                <option value="QRIS">QRIS</option>
                                <option value="Card">Kartu Debit/Kredit</option>
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                <button type="button" class="btn btn-primary" id="processExitBtn" style="display: none;" 
                        onclick="processExit()">Proses Keluar</button>
            </div>
        </div>
    </div>
</div>

<script>
async function searchVehicle() {
    const vehicleNumber = document.querySelector('input[name="vehicleNumber"]').value;
    if (!vehicleNumber) {
        Swal.fire({
            icon: 'warning',
            title: 'Perhatian',
            text: 'Masukkan nomor kendaraan terlebih dahulu'
        });
        return;
    }

    try {
        const response = await fetch(`/Parking/GetVehicleDetails?vehicleNumber=${encodeURIComponent(vehicleNumber)}`);
        const data = await response.json();

        if (response.ok && data.vehicle) {
            document.getElementById('vehicleType').textContent = data.vehicle.vehicleType;
            document.getElementById('entryTime').textContent = data.vehicle.entryTime;
            document.getElementById('duration').textContent = data.duration;
            document.getElementById('totalCost').textContent = `Rp ${data.totalCost.toLocaleString()}`;
            
            document.getElementById('vehicleDetails').style.display = 'block';
            document.getElementById('processExitBtn').style.display = 'block';
        } else {
            throw new Error(data.error || 'Kendaraan tidak ditemukan');
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
        });
    }
}

async function processExit() {
    const form = document.getElementById('vehicleExitForm');
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/Parking/ProcessExit', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(data)
        });

        const result = await response.json();
        
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Berhasil',
                text: 'Kendaraan berhasil dicatat keluar'
            }).then(() => {
                $('#vehicleExitModal').modal('hide');
                form.reset();
                document.getElementById('vehicleDetails').style.display = 'none';
                document.getElementById('processExitBtn').style.display = 'none';
            });
        } else {
            throw new Error(result.error || 'Terjadi kesalahan');
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message
        });
    }
}
</script> 